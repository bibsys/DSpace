version: '3.7'
networks:
  dspacenet:
    ipam:
      config: 
        - subnet: 192.168.0.0/24
services:
  dspace: 
    container_name: dspace
    environment:
      dspace__P__dir: /dspace
      dspace__P__server__P__url: http://localhost:8080/server
      dspace__P__ui__P__url: http://localhost:4000
      dspace__P__name: 'DSpace-Cris Started with Docker Compose'
      # db.url
      db__P__url: 'jdbc:postgresql://dspacedb:5432/dspace'
      # solr.server
      solr__P__server: http://dspacesolr:8983/solr
      # proxies.trusted.ipranges: This setting is required for a REST API running in Docker to trust requests 
      # from the host machine. This IP range MUST correspond to the 'dspacenet' subnet defined above.
      proxies__P__trusted__P__ipranges: '192.168.0'
    # Will probably be modified, the dspace backend image
    image: "test/dspace-cris"
    # build:
    #   context: .
    #   dockerfile: Dockerfile
    #  Indicate services that needs to be started before the current one
    depends_on:
    - dspacedb
    networks:
      dspacenet:
    ports:
    - published: 8080
      target: 8080
    - published: 8009
      target: 8009
    - published: 8000
      target: 8000
    stdin_open: true
    tty: true
    volumes:
      - assetstore:/dspace/assetstore
      - ./dspace/config:/dspace/config
      - ./scripts/config:/uclouvain/config
      - ./scripts/archives:/uclouvain/archives
      # - solr_configs:/dspace/solr
    # Ensure that the database is ready BEFORE starting tomcat
    entrypoint: 
    - /bin/bash
    - '-c'
    - |
      while (!</dev/tcp/dspacedb/5432) > /dev/null 2>&1; do sleep 1; done;
      /dspace/bin/dspace database migrate
      catalina.sh run
  dspacedb: 
    container_name: dspacedb
    environment:
      PGDATA: /pgdata
      POSTGRES_USER: dspace
      POSTGRES_DB: dspace
      POSTGRES_PASSWORD: dspace
    image: dspace/dspace-postgres-pgcrypto
    networks:
      dspacenet:
    ports: 
    - published: 5432
      target: 5432
    stdin_open: true
    tty: true
    volumes:
      - pgdata:/pgdata
  dspacesolr:
    container_name: dspacesolr
    image: solr:8.11-slim
    # Indicate services that needs to be started before the current one
    networks:
      dspacenet:
    ports: 
    - published: 8983
      target: 8983
    stdin_open: true
    tty: true
    working_dir: /var/solr/data
    volumes:
    # Mount our local Solr core configs so that they are available as Solr configsets on container
    - ./dspace/solr/authority:/opt/solr/server/solr/configsets/authority
    - ./dspace/solr/oai:/opt/solr/server/solr/configsets/oai
    - ./dspace/solr/search:/opt/solr/server/solr/configsets/search
    - ./dspace/solr/statistics:/opt/solr/server/solr/configsets/statistics
    - ./dspace/solr/audit:/opt/solr/server/solr/configsets/audit
    - ./dspace/solr/dedup:/opt/solr/server/solr/configsets/dedup
    - ./dspace/solr/nbevent:/opt/solr/server/solr/configsets/nbevent
    - ./dspace/solr/ocr:/opt/solr/server/solr/configsets/ocr
    - ./dspace/solr/suggestion:/opt/solr/server/solr/configsets/suggestion
    #  This one is to keep solr data between reboots
    - solr_data:/var/solr/data
    # Initialize all DSpace Solr cores using the mounted local configsets (see above), then start Solr
    # * First, run precreate-core to create the core (if it doesn't yet exist). If exists already, this is a no-op
    # * Second, copy updated configs from mounted configsets to this core. If it already existed, this updates core
    #   to the latest configs. If it's a newly created core, this is a no-op.
    entrypoint:
    - /bin/bash
    - '-c'
    - |
      init-var-solr
      precreate-core authority /opt/solr/server/solr/configsets/authority
      cp -r -u /opt/solr/server/solr/configsets/authority/* authority
      precreate-core oai /opt/solr/server/solr/configsets/oai
      cp -r -u /opt/solr/server/solr/configsets/oai/* oai
      precreate-core search /opt/solr/server/solr/configsets/search
      cp -r -u /opt/solr/server/solr/configsets/search/* search
      precreate-core statistics /opt/solr/server/solr/configsets/statistics
      cp -r -u /opt/solr/server/solr/configsets/statistics/* statistics
      precreate-core audit /opt/solr/server/solr/configsets/audit
      cp -r -u /opt/solr/server/solr/configsets/audit/* audit
      precreate-core dedup /opt/solr/server/solr/configsets/dedup
      cp -r -u /opt/solr/server/solr/configsets/dedup/* dedup
      precreate-core nbevent /opt/solr/server/solr/configsets/nbevent
      cp -r -u /opt/solr/server/solr/configsets/nbevent/* nbevent
      precreate-core ocr /opt/solr/server/solr/configsets/ocr
      cp -r -u /opt/solr/server/solr/configsets/ocr/* ocr
      precreate-core suggestion /opt/solr/server/solr/configsets/suggestion
      cp -r -u /opt/solr/server/solr/configsets/suggestion/* suggestion
      exec solr -f
volumes:
  assetstore:
  pgdata:
  solr_data:
