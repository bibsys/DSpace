#------------------------------------------------------------------#
#-------------------- DILBERT Configuration -----------------------#
#------------------------------------------------------------------#
uclouvain.main_dial_url = https://dial.uclouvain.be
uclouvain.main_author_query.url = ${uclouvain.main_dial_url}/cgi-bin/valet_utils
uclouvain.authority.name = UCLouvainAuthority
# Authority configuration.
# Each config correspond to a filter defined in the dilbert API. Possible values:
# - student_ucl = Just students from the UCLouvain
# - academic = Just academic staff from the UCLouvain
# - Other filters can be found in the dilbert API code/config
uclouvain.main_author_query.filter = student_ucl
uclouvain.main_promoter_query.filter = academic

#------------------------------------------------------------------#
#---------------------- OSIS Configuration ------------------------#
#------------------------------------------------------------------#
uclouvain.osis.secret = ${ESB_SECRET}
uclouvain.osis.base_url = https://gw.api.uclouvain.be

#------------------------------------------------------------------#
#----------------- Bitstream access restriction -------------------#
#------------------------------------------------------------------#
uclouvain.api.bitstream.download.secret = ${BITSTREAM_SECRET}
uclouvain.api.bitstream.download.algorithm = MD5
# Size in bytes of the buffer used to stream the content of the bitstream to the user
uclouvain.api.bitstream.download.buffer.size = 10240
uclouvain.api.bitstream.promoterfield = advisors.email

#------------------------------------------------------------------#
#------------------------ PDF generation --------------------------#
#------------------------------------------------------------------#
uclouvain.pdf_attestation.date_format = dd/MM/yyyy
uclouvain.pdf_attestation.template_dir = /config/pdf/attestation/
uclouvain.pdf_attestation.mail.subject = "Submission attestation"
uclouvain.pdf_attestation.mail.error.subject = "Submission attestation generation error"
uclouvain.pdf_attestation.mail.recipients = "michael.pourbaix@uclouvain.be"

uclouvain.pdf_attestation.mail.suffixes = "uclouvain.be"
uclouvain.pdf_attestation.mail.suffixes = "isfsc.be"

#------------------------------------------------------------------#
#------------------Metadata Field Configuration--------------------#
#------------------------------------------------------------------#
uclouvain.global.metadata.license.field = dc.rights.license
uclouvain.global.metadata.license.default = https://creativecommons.org/licenses/by/4.0/
uclouvain.global.metadata.accesstype.field = dcterms.accessRights

#------------------------------------------------------------------#
#-------------- Packager ingestion configuration ------------------#
#------------------------------------------------------------------#
mets.dspaceSIP.ingest.preserveManifest=true
mets.dspaceSIP.ingest.manifestBitstreamFormat=XML
# Configure XSLT-driven submission crosswalk for MODS-THEIS
crosswalk.submission.MODS-THESIS.stylesheet= crosswalks/mods-thesis-submission.xsl
# Bitstream metadata extractor stylesheet
uclouvain.ingester.bitstreamMetadataExtractor.stylesheet = crosswalks/bitstream-metadata.xsl

#------------------------------------------------------------------#
#------------------- SOLR plugin configuration --------------------#
#------------------------------------------------------------------#
uclouvain.solr.plugin.workflow.degree.field.filter = degreecode_keyword
uclouvain.solr.plugin.workflow.degree.field.metadata = crisrp.workgroup

#------------------------------------------------------------------#
#----------- Resource policy endpoint configuration ---------------#
#------------------------------------------------------------------#
uclouvain.resource_policy.accepted_bundles = ORIGINAL
# Could add more bundle by adding more occurrence of this key:
# ex: uclouvain.resource_policy.accepted_bundles = METADATA

#------------------------------------------------------------------#
#------------------ Submission configuration ----------------------#
#------------------------------------------------------------------#
# Indicate which are the roles that are allowed to submit an unlimited amount of time
uclouvain.feature.can_create_submission.permit_all_time = Administrator
uclouvain.feature.can_create_submission.permit_all_time = manager
uclouvain.feature.can_create_submission.permit_all_time = unresticted_submit_student

#------------------------------------------------------------------#
#-------------- UCLouvain consumers configuration -----------------#
#------------------------------------------------------------------#
event.consumer.licensegenerator.class = org.dspace.uclouvain.consumer.LicenseConsumer
event.consumer.licensegenerator.filters = Bitstream+All

event.consumer.accesstype.class = org.dspace.uclouvain.consumer.AccessTypeConsumer
event.consumer.accesstype.filters = Bitstream+Create|Modify|Delete|Remove
